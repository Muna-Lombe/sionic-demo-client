{"version":3,"file":"static/js/486.b5eee4fe.chunk.js","mappings":"wLAyCA,UAlCe,WAEb,IAAMA,EAAgB,SAAC,GAAiB,EAAfC,SAAgB,IACjCC,EAAgBC,KAAKC,OAAMC,EAAAA,EAAAA,MAAkB,GAAGC,IAAI,UAEpDC,GAAWC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAuBP,KAAmB,GAGvE,OACI,gBAAKQ,UAAU,wEAAf,SAEQH,EAASI,QACL,iCACE,SAAC,KAAD,KACA,gBAAKC,GAAG,kBAAkBF,UAAW,gPAArC,SACKH,EAASM,KAAI,SAACC,GAAD,OAAQ,SAAC,KAAD,CAAqBC,QAASD,EAAGE,gBAAc,GAAjCF,EAAEF,GAAxB,UAI1B,SAAC,KAAD,CAASK,UAAU,0BAAG,sDAAH,KAAwC,SAAC,KAAD,CAAMC,GAAI,IAAKR,UAAU,gBAAzB,0BAA+DS,QAAQ,+CAI7I,EACD,OACI,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,iBAAKX,UAAU,wCAAf,WACE,SAACV,EAAD,KACA,SAAC,KAAD,CAAkBsB,MAAO,qCAAsCC,QAAS,2BAIjF,C","sources":["pages/Search.jsx"],"sourcesContent":["import React, { Suspense } from 'react'\nimport { EmbeddedProducts, FilterSearchResults, NoItems, Product } from '../components'\nimport { Link, Outlet, useParams, useSearchParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { filteredProductsFromModel, productsMatchingSearch } from '../orm/selectors'\nimport { searchedProductTextArr } from '../js/slices/products/productsSlice'\n\nconst Search = () => {\n  \n  const SearchResults = ({ children }) => {\n    const searchTextArr = JSON.parse(useSearchParams()[0].get('query'))\n    // console.log(\"prods matching\", searchTextArr )\n    const products = useSelector(productsMatchingSearch(searchTextArr)) || []\n    const bigScreens = \"grid-cols-[repeat(auto-fit,minmax(14rem,1fr))] gap-8\"\n    const smallScreens = \"grid-cols-[repeat(auto-fit,minmax(10rem,12rem))] gap-2\"\n    return (\n        <div className=\"search-filter-wrapper relative w-full h-max flex flex-col md:flex-row\">\n              {\n                products.length \n                  ? <>\n                      <FilterSearchResults/>\n                      <div id=\"search__content\" className={\"p-2 w-full  grid grid-flow-row-dense \" + smallScreens + \" greater-than-md:\" + bigScreens +\" overflow-x-clip scroll-smooth gap-[38px] justify-center  transition-all  tag\"}>\n                          {products.map((i) => (<Product key={i.id}  product={i} isSearchOrMain/>))}\n                      </div>\n                    \n                    </>\n            : <NoItems mainText={<p><span>Perhaps you look on our</span> <Link to={\"/\"} className='text-blue-500'>main page</Link></p>} subText=\"We couldn't find what you are looking for\"/>\n              }\n        </div>\n    )\n  }\n  return (\n      <Suspense fallback={<NoItems />}>\n        <div className=\"search-wrapper relative flex flex-col\">\n          <SearchResults/>\n          <EmbeddedProducts title={\"Product You Might Be Interested In\"} tagname={\"suggested-products\"}/>\n        </div>\n      </Suspense>\n  )\n}\n\nexport default Search"],"names":["SearchResults","children","searchTextArr","JSON","parse","useSearchParams","get","products","useSelector","productsMatchingSearch","className","length","id","map","i","product","isSearchOrMain","mainText","to","subText","Suspense","fallback","title","tagname"],"sourceRoot":""}